/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package main;
import javax.swing.JFileChooser;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.StringReader;
import java.io.File;

/**
 *
 * @author saulc
 */
public class statpy extends javax.swing.JFrame {

    /**
     * Creates new form statpy
     */
    public statpy() {
        initComponents();
        jSplitPane1.setDividerLocation(0.99);
        printText("Saul Castellanos, 201801178","Bienvenido a StatPy!");
    }
    private String path = "";
    private enum parser {NO_PARSER, STATPY, JSON}
    parser parserChoice = parser.NO_PARSER;
    private void printText(String verb, String text){
        outputArea.append("["+parserChoice+"]$ "+verb+"\n"+text+"\n");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        editorArea = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        outputArea = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openFileItem = new javax.swing.JMenuItem();
        saveFileItem = new javax.swing.JMenuItem();
        saveAsItem = new javax.swing.JMenuItem();
        parserMenu = new javax.swing.JMenu();
        statpyItem = new javax.swing.JMenuItem();
        jsonItem = new javax.swing.JMenuItem();
        execMenu = new javax.swing.JMenu();
        parseInputItem = new javax.swing.JMenuItem();
        reportMenu = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jSplitPane1.setDividerLocation(100);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        editorArea.setColumns(20);
        editorArea.setFont(new java.awt.Font("Source Code Pro", 0, 18)); // NOI18N
        editorArea.setRows(5);
        editorArea.setTabSize(4);
        jScrollPane3.setViewportView(editorArea);

        jSplitPane1.setLeftComponent(jScrollPane3);

        jLabel1.setText("Output:");

        outputArea.setEditable(false);
        outputArea.setColumns(20);
        outputArea.setFont(new java.awt.Font("Source Code Pro", 0, 18)); // NOI18N
        outputArea.setRows(5);
        jScrollPane1.setViewportView(outputArea);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 727, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                .addContainerGap())
        );

        jSplitPane1.setRightComponent(jPanel1);

        fileMenu.setText("Archivo");

        openFileItem.setText("Abrir");
        openFileItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFileItemActionPerformed(evt);
            }
        });
        fileMenu.add(openFileItem);

        saveFileItem.setText("Guardar");
        fileMenu.add(saveFileItem);

        saveAsItem.setText("Guardar como");
        fileMenu.add(saveAsItem);

        jMenuBar1.add(fileMenu);

        parserMenu.setText("Parser");

        statpyItem.setText("StatPy");
        statpyItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statpyItemActionPerformed(evt);
            }
        });
        parserMenu.add(statpyItem);

        jsonItem.setText("JSON");
        jsonItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jsonItemActionPerformed(evt);
            }
        });
        parserMenu.add(jsonItem);

        jMenuBar1.add(parserMenu);

        execMenu.setText("Ejecutar");

        parseInputItem.setText("Parsear entrada");
        parseInputItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parseInputItemActionPerformed(evt);
            }
        });
        execMenu.add(parseInputItem);

        jMenuBar1.add(execMenu);

        reportMenu.setText("Reporte");

        jMenuItem6.setText("Tokens");
        reportMenu.add(jMenuItem6);

        jMenuItem7.setText("Errores");
        reportMenu.add(jMenuItem7);

        jMenuBar1.add(reportMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openFileItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFileItemActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            main.ParserState.file_name = selectedFile.getName();
            try{
                BufferedReader input = new BufferedReader(new FileReader(selectedFile));
                editorArea.read(input, "Leyendo archivo");
            }
            catch (Exception e){
                e.printStackTrace();
            }
            path = selectedFile.getAbsolutePath();
            printText("Abrir "+path, "Archivo escogido: "+selectedFile.getName());
        }    
    }//GEN-LAST:event_openFileItemActionPerformed

    private void statpyItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statpyItemActionPerformed
        parserChoice = parser.STATPY;
        printText("parser statpy", "Parser escogido: StatPy");
    }//GEN-LAST:event_statpyItemActionPerformed

    private void jsonItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jsonItemActionPerformed
        parserChoice = parser.JSON;
        printText("parser json", "Parser escogido: JSON");
    }//GEN-LAST:event_jsonItemActionPerformed

    private void parseInputItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parseInputItemActionPerformed
        BufferedReader input = new BufferedReader(new StringReader(editorArea.getText()));
        switch (parserChoice){
            case JSON -> {
                if ("".equals(editorArea.getText())){
                    printText("Ejecutar "+path,"No hay entrada de texto");
                    break;
                }
                main.ParserState.parseJson(input);
                printText("Ejecutar "+path,main.ParserState.getOutput());
            }
            case STATPY -> {
                if ("".equals(editorArea.getText())){
                    printText("Ejecutar "+path,"No hay entrada de texto");
                    break;
                }
                main.ParserState.parseStatpy(input);
                printText("Ejecutar "+path,main.ParserState.getOutput());
            }
            default -> printText("Ejecutar "+path,"No ha escogido el parser");
        }
    }//GEN-LAST:event_parseInputItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(statpy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(statpy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(statpy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(statpy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new statpy().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea editorArea;
    private javax.swing.JMenu execMenu;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JMenuItem jsonItem;
    private javax.swing.JMenuItem openFileItem;
    private javax.swing.JTextArea outputArea;
    private javax.swing.JMenuItem parseInputItem;
    private javax.swing.JMenu parserMenu;
    private javax.swing.JMenu reportMenu;
    private javax.swing.JMenuItem saveAsItem;
    private javax.swing.JMenuItem saveFileItem;
    private javax.swing.JMenuItem statpyItem;
    // End of variables declaration//GEN-END:variables
}
